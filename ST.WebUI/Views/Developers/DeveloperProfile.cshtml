@model ST.WebUI.ViewModels.DeveloperViewModel
@{
    ViewBag.Title = "DeveloperProfile";
}

<h1>@Model.FirstName @Model.LastName <small>@Model.Email</small></h1>


<div class="skill-ratings">
    @foreach (var entry in Model.SkillRatings)
    {
        <ul class="category-group">
            <li class="category-group-item">@entry.Key</li>
            <ul class="skills-group">
                @foreach (var skill in entry.Value)
                {
                    <li class="skills-item" data-skill-rating="@skill.Rating"
                        data-skill-id="@skill.SkillId"
                        data-skill-name="@skill.SkillName">

                        <section>
                            <span class="skills-item-name">@skill.SkillName</span>
                            <div class="actions">
                                <span class="skills-item-delete glyphicon glyphicon-trash"></span>
                                <span class="skills-item-edit glyphicon glyphicon-pencil"></span>
                            </div>
                        </section>

                    </li>
                }
            </ul>
        </ul>
    }
</div>

@Html.ActionLink("Add new Skill", "Create", null, new { @class = "btn btn-info" })

@section Scripts
{
    <script>
        $(function () {
            drawRatings();

            $(".skills-item-delete").on("click", function (e) {
                var element = $(e.target);
                var skillName = element.closest('li').attr("data-skill-name");
                var skillId = element.closest('li').attr("data-skill-id");

                bootbox.confirm({
                    message: "Are you sure you want to delete <strong>" + skillName + "</strong> skill?",
                    buttons: {
                        cancel: {
                            label: 'No',
                            className: 'btn-default'
                        },
                        confirm: {
                            label: 'Yes',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (!result) return;

                        $.ajax({
                            url: "/api/skillratings/" + skillId,
                            method: "POST"
                        })
                            .done(function () {
                                element.closest('li')
                                    .fadeOut(function () {
                                        $(this).remove();
                                    })
                            })
                            .fail(function () {
                                alert("Error!");
                            })
                    }
                });
            });

            $(".skills-item-edit").on("click", function (e) {
                var element = $(e.target);

                var skillId = element.closest('li').attr("data-skill-id");

                var skillItem = element.closest("li");
                skillItem.find(".glyphicon-star").remove();

                var actions = skillItem.find('.actions');

                actions.toggleClass('actions').css('display', 'none');

                var rating = skillItem.attr("data-skill-rating");

                var editor = $(`<input class="form-control edit-rating" type="number" value="${rating}" min="1" max="5" />`);

                var acceptChangesEl = $('<span class="skills-item-update glyphicon glyphicon-ok"></span>');
                skillItem.find("section").append(editor).append(acceptChangesEl);

                editor.focus();

                $(".edit-rating").on("blur", function (e) {
                    var element = $(e.target);
                    var parentEl = element.closest("li");

                    var newRating = element.val();

                    if (newRating != rating) {
                        $.post('/api/skillratings',
                            {
                                skillId: skillId,
                                rating: newRating
                            })
                            .done(function () {
                                rating = newRating;
                                actions.toggleClass('actions').css('display', '');
                                element.remove();
                                acceptChangesEl.remove();

                                for (var i = 0; i < rating; i++) {
                                    parentEl.find("section").append("<span class='glyphicon glyphicon-star'></span>");
                                }
                            })
                            .fail(function () {
                                alert("Error");
                            });
                    } else {
                        actions.toggleClass('actions').css('display', '');
                        element.remove();
                        acceptChangesEl.remove();

                        for (var i = 0; i < rating; i++) {
                            parentEl.find("section").append("<span class='glyphicon glyphicon-star'></span>");
                        }
                    }
                });
            });

            function drawRatings() {
                var skillItems = $(".skills-item");
                $.each(skillItems, function (index, item) {
                    var rating = $(this).attr("data-skill-rating")
                    for (var i = 0; i < rating; i++) {
                        $(item).find("section").append("<span class='glyphicon glyphicon-star'></span>");
                    }
                });
            }
        });
    </script>
}

